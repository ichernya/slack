#
# CSE183 Assignment 8 Backend
#

openapi: '3.0.3'

info:
  description: CSE183 Assignment 8 Backend
  version: 0.1.0
  title: CSE183 Assignment 8 Backend

servers:
  - url: http://localhost:3010/v0

paths:
  /dummy:
    get:
      description: Dummy Endpoint
      responses:
        200:
          description: Succesful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DummyResponse'
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

  /users:
    get:
      description: login user
      parameters:
        - name: username
          in: query
          description: Name of user
          required: true
          schema:
            type: string
        - name: password
          in: query
          description: Password of user
          required: true
          schema:
            type: string
      responses:
        200:
          description: user logged in
        404:
          description: Wrong Credentials

    post:
      description: create a new user
      requestBody:
        description: username and password for user
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateUser'  
      responses: 
        201:
          description: created
        409:
          description: conflict

  /name:
    get:
      description: returns name of someone
      parameters:
        - in: query
          name: user
          schema:
            type: string
          required: true
          description: person to return
      responses:
        200: 
          description: user found
          content:
            application/json:
              schema:
                type: object
                properties:
                  firstName:
                    type: string
                  lastName:
                    type: string
                  status:
                    type: string
        default:
          description: Unexpected Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

    put:
      description: updates the last workspace of a user
      parameters:
        - name: user
          in: query
          description: user to update
          required: true
          schema:
            type: string
        - name: workspace
          in: query
          description: name of recent workspace
          required: true
          schema:
            type: string
      responses:
        200:
          description: changed workspace
        404:
          description: error
        default:
          description: Unexpected Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

  /messages:
    get:
      description: gets all messages that have that channel
      parameters:
        - in: query
          name: channel
          schema:
            type: string
          required: true
          description: messages to return, blank for all
      responses:
        200: 
          description: messages returned
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Message'
        default:
          description: Unexpected Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    post:
      description: Add a new message
      requestBody:
        description: message contents
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SendMessage'
      responses:
        201:
          description: created message
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SendMessage'
        404:
          description: failed

  /channel:
    get:
      description: Returns all Channels
      parameters:
        - in: query
          name: Workspace
          schema:
            type: string
          required: true
          description: Workspace to return, blank for all
      responses:
        200:
          description: Channel Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AllChannels'
        default:
          description: Unexpected Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    post:
      description: Add a new channel
      requestBody:
        description: channel contents
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MakeChannel'
      responses:
        201:
          description: created channel
        404:
          description: failed
  
  /workspace:
    get:
      description: returns all workspaces
      responses:
        200:
          description: workspace response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Workspace'
        default:
          description: Unexpected Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

  /dms:
    get:
      description: returns dms between two people
      parameters:
        - in: query
          name: user
          schema:
            type: string
          required: true
          description: user that is logged in
        - in: query
          name: workspace
          schema:
            type: string
          required: true
          description: workspace to look in
      responses:
        200:
          description: returns all names
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Names'
        default:
          description: Unexpected Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    post:
      description: creates a dm between two people
      requestBody:
        description: people 
        content:
          application/json:
            schema:
              type: object
              properties:
                userone:
                  type: string
                workspace:
                  type: string
                usertwo:
                  type: string
      responses:
        200:
          description: user created
        default:
          description: Unexpected Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      
  
  /dmMessages:
    get:
      description: returns dms between two people
      parameters:
        - in: query
          name: user
          schema:
            type: string
          required: true
          description: user that is logged in
        - in: query
          name: workspace
          schema:
            type: string
          required: true
          description: workspace to look in
        - in: query
          name: userSecond
          schema:
            type: string
          required: true
          description: messages between two 
      responses:
        200:
          description: returns all messages
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/arrayDm'
        default:
          description: Unexpected Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  
    post:
      description: creates a dm between two people
      requestBody:
        description: dm contents
        content:
          application/json:
            schema:
              type: object
              properties:
                workspace:
                  type: string
                userOne:
                  type: string
                userTwo:
                  type: string
                sentMessages:
                  type: object
                  properties:
                    sent:
                      type: string
                    recieved:
                      type: string
                    time:
                      type: string
                    message:
                      type: string
      responses:
        200:
          description: Message was created
        default:
          description: Unexpected Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        


components:
  schemas:
    Error:
      required:
        - code
        - message
      properties:
        code:
          type: integer
          format: int32
        message:
          type: string

    DummyResponse:
      required:
        - message
      properties:
        message:
          type: string
    
    CreateUser:
      required:
        - username
        - password
        - name
      properties:
          username:
            type: string
          password:
            type: string
          name:
            type: string
      
    SendMessage:
      required:
        - username
        - channel
      properties:
        username:
          type: string
        message:
          type: string
        time:
          type: string
        channel:
          type: string
        replies:
          type: integer

    MakeChannel:
      type: object
      required:
        - curWorkspace
        - channelName
      properties:
        curWorkspace:
          type: string
        channelName:
          type: string

    AllChannels:
      type: array
      items:
        $ref: '#/components/schemas/Channel'
    
    Channel:
      type: object
      items:
         $ref: '#/components/schemas/MakeChannel'

    Workspace:
      type: array
      items: 
        type: object
        properties:
          workspaceName:
            type: string

    Messages:
      type: object
      items:
        $ref: '#/components/schemas/Message'

    Message:
      properties:
        curChannel:
          type: string
        curuser:
          type: string
        sentTime:
          type: string
        replies:
          type: integer
        messagebody:
          type: string

    Names:
        type: array
        items:
          type: string
    
    arrayDm:
      type: array
      items:
        $ref: '#/components/schemas/messageDm'

    messageDm:
      type: object
      properties:
        sent:
          type: string
        recieved:
          type: string
        time:
          type: string
        message:
          type: string
