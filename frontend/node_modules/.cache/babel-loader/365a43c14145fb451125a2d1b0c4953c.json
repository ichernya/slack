{"ast":null,"code":"var _jsxFileName = \"/Users/keatonsinger/Desktop/cse-183-final-project/frontend/src/Dm.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect } from 'react';\nimport './Dm.css';\n/**\n* @param {Object} props - Channel Name\n* @return {JSX} - Channel Page\n*/\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Dm(props) {\n  _s();\n\n  const [addedDM, setAddedDM] = React.useState('');\n  const [fullName, setFullName] = React.useState('');\n  const [currMessages, setCurrMessages] = React.useState([]);\n  useEffect(() => {\n    if (props.main) {\n      fetchFullName();\n    }\n  }, [props.main]);\n  useEffect(() => {\n    if (props.side) {\n      const second = `&workspace=${props.workspace}&userSecond=${props.side}`;\n      fetch(`http://localhost:3010/v0/dmMessages?user=${props.main}` + second).then(async res => {\n        const messageArray = [];\n\n        if (res.status === 200) {\n          const foundMessages = await res.json();\n\n          for (let i = 0; i < foundMessages.length; i++) {\n            const message = foundMessages[i];\n            const sentMessages = message.sentmessages;\n\n            if (Object.keys(sentMessages).length !== 0) {\n              messageArray.push(createMessage(message));\n            }\n          }\n\n          setCurrMessages(messageArray);\n        }\n      }).catch(err => err);\n    }\n  }, [props.workspace, props.side]);\n  /**\n  * @param {String} user - Username for user\n  */\n\n  function fetchFullName(user) {\n    const first = 'http://localhost:3010/v0/';\n    fetch(first + `name?user=${props.main}`).then(async res => {\n      const userData = await res.json();\n      const fullNameTemp = userData.firstName + ' ' + userData.lastName;\n      setFullName(fullNameTemp);\n    }).catch(err => err);\n  }\n  /**\n  * @param {String} newMessage - Message to Add\n  */\n\n\n  function addDM(newMessage) {\n    setAddedDM('');\n    const body = {\n      curWorkspace: props.workspace,\n      userOne: props.main,\n      userTwo: props.side,\n      sentMessages: {\n        sent: props.main,\n        received: props.side,\n        time: new Date().toISOString().split('.')[0] + 'Z',\n        message: newMessage\n      }\n    };\n    console.log(JSON.stringify(body));\n    fetch('http://localhost:3010/v0/dmMessages', {\n      method: 'POST',\n      body: JSON.stringify(body),\n      headers: {\n        'Accept': 'application/json',\n        'Content-Type': 'application/json'\n      }\n    }).then(res => res.json()).catch(err => err);\n    const newDM = createMessage(body);\n    setCurrMessages(array => [...array, newDM]);\n  }\n  /**\n  * @param {JSON} object - Message Object with Information\n  * @return {JSX} - JSX for Message\n  */\n\n\n  function createMessage(object) {\n    let message;\n\n    if (object.sentMessages) {\n      message = object.sentMessages.message;\n    } else {\n      message = object.sentmessages.message;\n    }\n\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"message\",\n      children: [fullName, message]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 7\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"dm-head\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"dm-type\",\n        children: props.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"dm-main\",\n      children: [currMessages, /*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"dm-adder\",\n        children: /*#__PURE__*/_jsxDEV(\"input\", {\n          id: \"add-dm\",\n          type: \"text\",\n          onInput: event => setAddedDM(event.target.value),\n          value: addedDM,\n          placeholder: \"Send Message\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        id: \"dm-button\",\n        onClick: () => addDM(addedDM),\n        children: \"Send\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 98,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Dm, \"STs4XAPVFJ9xEVxeyBIPyXUkUTM=\");\n\n_c = Dm;\nexport default Dm;\n\nvar _c;\n\n$RefreshReg$(_c, \"Dm\");","map":{"version":3,"sources":["/Users/keatonsinger/Desktop/cse-183-final-project/frontend/src/Dm.js"],"names":["React","useEffect","Dm","props","addedDM","setAddedDM","useState","fullName","setFullName","currMessages","setCurrMessages","main","fetchFullName","side","second","workspace","fetch","then","res","messageArray","status","foundMessages","json","i","length","message","sentMessages","sentmessages","Object","keys","push","createMessage","catch","err","user","first","userData","fullNameTemp","firstName","lastName","addDM","newMessage","body","curWorkspace","userOne","userTwo","sent","received","time","Date","toISOString","split","console","log","JSON","stringify","method","headers","newDM","array","object","name","event","target","value"],"mappings":"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","sourcesContent":["import React, {useEffect} from 'react';\nimport './Dm.css';\n\n/**\n* @param {Object} props - Channel Name\n* @return {JSX} - Channel Page\n*/\nfunction Dm(props) {\n  const [addedDM, setAddedDM] = React.useState('');\n  const [fullName, setFullName] = React.useState('');\n  const [currMessages, setCurrMessages] = React.useState([]);\n  useEffect(() => {\n    if (props.main) {\n      fetchFullName();\n    }\n  }, [props.main]);\n  useEffect(() => {\n    if (props.side) {\n      const second = `&workspace=${props.workspace}&userSecond=${props.side}`;\n      fetch(`http://localhost:3010/v0/dmMessages?user=${props.main}` + second)\n        .then(async (res) => {\n          const messageArray = [];\n          if (res.status === 200) {\n            const foundMessages = await res.json();\n            for (let i = 0; i < foundMessages.length; i++) {\n              const message = foundMessages[i];\n              const sentMessages = message.sentmessages;\n              if (Object.keys(sentMessages).length !== 0) {\n                messageArray.push(createMessage(message));\n              }\n            }\n            setCurrMessages(messageArray);\n          }\n        },\n        )\n        .catch((err) => err);\n    }\n  }, [props.workspace, props.side]);\n  /**\n  * @param {String} user - Username for user\n  */\n  function fetchFullName(user) {\n    const first = 'http://localhost:3010/v0/';\n    fetch(first + `name?user=${props.main}`)\n      .then(async (res) => {\n        const userData = await res.json();\n        const fullNameTemp = userData.firstName + ' ' + userData.lastName;\n        setFullName(fullNameTemp);\n      },\n      )\n      .catch((err) => err);\n  }\n  /**\n  * @param {String} newMessage - Message to Add\n  */\n  function addDM(newMessage) {\n    setAddedDM('');\n    const body = {\n      curWorkspace: props.workspace,\n      userOne: props.main,\n      userTwo: props.side,\n      sentMessages: {\n        sent: props.main,\n        received: props.side,\n        time: (new Date().toISOString().split('.')[0] +'Z'),\n        message: newMessage,\n      }};\n    console.log(JSON.stringify(body))\n    fetch('http://localhost:3010/v0/dmMessages', {\n      method: 'POST',\n      body: JSON.stringify(body),\n      headers: {\n        'Accept': 'application/json',\n        'Content-Type': 'application/json',\n      },\n    })\n      .then((res) => res.json())\n      .catch((err) => err);\n    const newDM = createMessage(body);\n    setCurrMessages((array) => [...array, newDM]);\n  }\n  /**\n  * @param {JSON} object - Message Object with Information\n  * @return {JSX} - JSX for Message\n  */\n  function createMessage(object) {\n    let message;\n    if (object.sentMessages) {\n      message = object.sentMessages.message;\n    } else {\n      message = object.sentmessages.message;\n    }\n    return (\n      <div id='message'>{fullName}{message}</div>\n    );\n  }\n  return (\n    <div>\n      <div id='dm-head'>\n        <div id='dm-type'>\n          {props.name}\n        </div>\n      </div>\n      <div id='dm-main'>\n        {currMessages}\n        <div id='dm-adder'>\n          <input\n            id='add-dm'\n            type='text'\n            onInput={(event)=>setAddedDM(event.target.value)}\n            value={addedDM}\n            placeholder='Send Message'\n          />\n        </div>\n        <button id='dm-button'\n          onClick={()=>addDM(addedDM)}>\n          Send\n        </button>\n      </div>\n    </div>\n  );\n}\n\nexport default Dm;\n"]},"metadata":{},"sourceType":"module"}