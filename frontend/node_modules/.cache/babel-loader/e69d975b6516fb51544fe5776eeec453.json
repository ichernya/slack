{"ast":null,"code":"var _jsxFileName = \"/Users/keatonsinger/Desktop/cse-183-final-project/frontend/src/Dm.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport './Dm.css';\n/**\n* @param {Object} props - Channel Name\n* @return {JSX} - Channel Page\n*/\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Dm(props) {\n  _s();\n\n  console.log(props.workspace, 'workspace');\n  console.log(props.name, 'name');\n  console.log(props.main, 'main');\n  console.log(props.side, 'side'); // const [currMessages, setCurrMessages] = React.useState([]);\n\n  useEffect(() => {\n    fetch('http://localhost:3010/v0/workspace').then(async res => {\n      const arrayWork = [];\n\n      if (res.status === 200) {\n        const foundWorkspaces = await res.json();\n\n        for (let i = 0; i < foundWorkspaces.length; i++) {\n          const workspacename = foundWorkspaces[i].workspacename;\n\n          if (workspacename !== workspace) {\n            arrayWork.push(createWorkspaces(workspacename));\n          }\n        }\n\n        setWorkspaces(arrayWork);\n      }\n    }).catch(err => err);\n  }, [workspace]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"dm-head\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"dm-type\",\n        children: props.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"dm-main\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Dm, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n\n_c = Dm;\nexport default Dm;\n\nvar _c;\n\n$RefreshReg$(_c, \"Dm\");","map":{"version":3,"sources":["/Users/keatonsinger/Desktop/cse-183-final-project/frontend/src/Dm.js"],"names":["React","Dm","props","console","log","workspace","name","main","side","useEffect","fetch","then","res","arrayWork","status","foundWorkspaces","json","i","length","workspacename","push","createWorkspaces","setWorkspaces","catch","err"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,UAAP;AAEA;AACA;AACA;AACA;;;;AACA,SAASC,EAAT,CAAYC,KAAZ,EAAmB;AAAA;;AACjBC,EAAAA,OAAO,CAACC,GAAR,CAAYF,KAAK,CAACG,SAAlB,EAA6B,WAA7B;AACAF,EAAAA,OAAO,CAACC,GAAR,CAAYF,KAAK,CAACI,IAAlB,EAAwB,MAAxB;AACAH,EAAAA,OAAO,CAACC,GAAR,CAAYF,KAAK,CAACK,IAAlB,EAAwB,MAAxB;AACAJ,EAAAA,OAAO,CAACC,GAAR,CAAYF,KAAK,CAACM,IAAlB,EAAwB,MAAxB,EAJiB,CAKjB;;AACAC,EAAAA,SAAS,CAAC,MAAM;AACdC,IAAAA,KAAK,CAAC,oCAAD,CAAL,CACGC,IADH,CACQ,MAAOC,GAAP,IAAe;AACnB,YAAMC,SAAS,GAAG,EAAlB;;AACA,UAAID,GAAG,CAACE,MAAJ,KAAe,GAAnB,EAAwB;AACtB,cAAMC,eAAe,GAAG,MAAMH,GAAG,CAACI,IAAJ,EAA9B;;AACA,aAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGF,eAAe,CAACG,MAApC,EAA4CD,CAAC,EAA7C,EAAiD;AAC/C,gBAAME,aAAa,GAAGJ,eAAe,CAACE,CAAD,CAAf,CAAmBE,aAAzC;;AACA,cAAIA,aAAa,KAAKd,SAAtB,EAAiC;AAC/BQ,YAAAA,SAAS,CAACO,IAAV,CAAeC,gBAAgB,CAACF,aAAD,CAA/B;AACD;AACF;;AACDG,QAAAA,aAAa,CAACT,SAAD,CAAb;AACD;AACF,KAbH,EAeGU,KAfH,CAeUC,GAAD,IAASA,GAflB;AAgBD,GAjBQ,EAiBN,CAACnB,SAAD,CAjBM,CAAT;AAkBA,sBACE;AAAA,4BACE;AAAK,MAAA,EAAE,EAAC,SAAR;AAAA,6BACE;AAAK,QAAA,EAAE,EAAC,SAAR;AAAA,kBACGH,KAAK,CAACI;AADT;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YADF,eAME;AAAK,MAAA,EAAE,EAAC;AAAR;AAAA;AAAA;AAAA;AAAA,YANF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAWD;;GAnCQL,E;;KAAAA,E;AAqCT,eAAeA,EAAf","sourcesContent":["import React from 'react';\nimport './Dm.css';\n\n/**\n* @param {Object} props - Channel Name\n* @return {JSX} - Channel Page\n*/\nfunction Dm(props) {\n  console.log(props.workspace, 'workspace');\n  console.log(props.name, 'name');\n  console.log(props.main, 'main');\n  console.log(props.side, 'side');\n  // const [currMessages, setCurrMessages] = React.useState([]);\n  useEffect(() => {\n    fetch('http://localhost:3010/v0/workspace')\n      .then(async (res) => {\n        const arrayWork = [];\n        if (res.status === 200) {\n          const foundWorkspaces = await res.json();\n          for (let i = 0; i < foundWorkspaces.length; i++) {\n            const workspacename = foundWorkspaces[i].workspacename;\n            if (workspacename !== workspace) {\n              arrayWork.push(createWorkspaces(workspacename));\n            }\n          }\n          setWorkspaces(arrayWork);\n        }\n      },\n      )\n      .catch((err) => err);\n  }, [workspace]);\n  return (\n    <div>\n      <div id='dm-head'>\n        <div id='dm-type'>\n          {props.name}\n        </div>\n      </div>\n      <div id='dm-main'>\n      </div>\n    </div>\n  );\n}\n\nexport default Dm;\n"]},"metadata":{},"sourceType":"module"}